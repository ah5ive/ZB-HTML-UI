{"version":3,"sources":["_fonts.scss","points-notifier.scss","_variables.scss","points-notifier.css","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","_mixins.scss"],"names":[],"mappings":"AAYA,uFAAY;ACDZ;EACE,yICNgD;EDMhD,iICNgD;EDMhD,4HCNgD;EDMhD,yHCNgD;EDMhD,qLCNgD;EDOhD,eAAe;EACf,UAAU;EACV,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,yBC+BmB;ED9BnB,kBAAkB;EAClB,kBAAkB;EAClB,8CC2BmB;ED3BnB,sCC2BmB;ED1BnB,eAAe;EAEf,aAAa;AEVf;;AC8CI;EHjDJ;IAeI,cAAc;EEPhB;AACF;;AFTA;EAmBI,yBAA0C;AEN9C;;AFbA;EAuBI,yIC5B8C;ED4B9C,iIC5B8C;ED4B9C,4HC5B8C;ED4B9C,yHC5B8C;ED4B9C,qLC5B8C;ED6B9C,6BAAqB;EAArB,yBAAqB;EAArB,qBAAqB;AENzB;;AFlBA;EA2BM,cAAc;AELpB;;AFtBA;EA+BM,UAAU;EACV,kBAAkB;AELxB;;AF3BA;EAqCI,iFCf+C;EDe/C,yECf+C;EDe/C,oECf+C;EDe/C,iECf+C;EDe/C,gICf+C;EDgB/C,2BAAmB;EAAnB,uBAAmB;EAAnB,mBAAmB;AENvB;;AFhCA;EA0CI,wEAAgE;EAAhE,gEAAgE;EAChE,uCAA+B;EAA/B,+BAA+B;AENnC;;AFrCA;EA+CI,iBAAiB;EACjB,aAAa;AENjB;;AF1CA;EAmDM,WAAW;EACX,YAAY;AELlB;;AF/CA;EAyDI,yHC9D8C;ED8D9C,oHC9D8C;ED8D9C,iHC9D8C;ED+D9C,eAAe;EACf,iBAAiB;EACjB,kBAAkB;AENtB;;AFtDA;EImLE,kBAAkB;EAClB,WJpH0B;EIqH1B,YJrH0B;EIsH1B,eAAe;EJrHb,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,kBAAkB;AEHtB;;AFjEA;EI0LI,sBAA0C;EAC1C,WAAW;EACX,kBAAkB;EAClB,QAA+B;EAC/B,WJ9H8B;EI+H9B,WJ/HmC;EIgInC,yBHrKiB;ACgDrB;;AF3EA;EIoMI,gCAAwB;EAAxB,4BAAwB;EAAxB,wBAAwB;AFrH5B;;AF/EA;EIwMI,iCAAyB;EAAzB,6BAAyB;EAAzB,yBAAyB;AFrH7B;;AFnFA;EAwEM,6EC7E4C;ED6E5C,wEC7E4C;ED6E5C,qEC7E4C;AC4FlD;;AFvFA;EA8EQ,yBCjDiB;AC8DzB;;AF3FA;;EDmBE,8CAA8C;EAC9C,gBAAgB;ECkEd,cC3DiB;ACuErB;;AFlGA;EIqFI,eAA0B;EAWxB,iBAAkC;EAKpC,gBJXqB;EACrB,kBAAkB;AEctB;;AFzGA;EA+FI,kECpG8C;EDoG9C,6DCpG8C;EDoG9C,0DCpG8C;EG0F9C,eAA0B;EAWxB,iBAAkC;EA8GtC,kBAAkB;EAClB,qBAAqB;AF9FvB;;AFjHA;EIkNI,WAAW;EACX,kBAAkB;EAClB,YJnH0B;EIoH1B,OAAO;EACP,WAAW;EACX,aAA0B;EAC1B,8BAA8B;AF7FlC;;AF3HA;EAoGM,cCvEmB;ACkGzB;;AFtBA;EACE,yIC/GgD;ED+GhD,iIC/GgD;ED+GhD,4HC/GgD;ED+GhD,yHC/GgD;ED+GhD,qLC/GgD;EDgHhD,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,YAAY;EACZ,aAAa;EACb,yBC1EmB;ED2EnB,kBAAkB;EAClB,kBAAkB;EAClB,8CC9EmB;ED8EnB,sCC9EmB;ED+EnB,eAAe;EAEf,aAAa;AEwBf;;AC7FI;EHwDJ;IAeI,aAAa;EE2Bf;AACF;;AF3CA;EAmBI,yBAA0C;AE4B9C;;AF/CA;EAuBI,yICrI8C;EDqI9C,iICrI8C;EDqI9C,4HCrI8C;EDqI9C,yHCrI8C;EDqI9C,qLCrI8C;EDsI9C,6BAAqB;EAArB,yBAAqB;EAArB,qBAAqB;AE4BzB;;AFpDA;EA2BM,cAAc;AE6BpB;;AFxDA;EA+BM,UAAU;EACV,kBAAkB;AE6BxB;;AF7DA;EAqCI,iFCxH+C;EDwH/C,yECxH+C;EDwH/C,oECxH+C;EDwH/C,iECxH+C;EDwH/C,gICxH+C;EDyH/C,2BAAmB;EAAnB,uBAAmB;EAAnB,mBAAmB;AE4BvB;;AFlEA;EA0CI,wEAAgE;EAAhE,gEAAgE;EAChE,uCAA+B;EAA/B,+BAA+B;AE4BnC;;AFvEA;EA+CI,iBAAiB;EACjB,aAAa;AE4BjB;;AF5EA;EAmDM,WAAW;EACX,YAAY;AE6BlB;;AFjFA;EAyDI,yHCvK8C;EDuK9C,oHCvK8C;EDuK9C,iHCvK8C;EDwK9C,eAAe;EACf,iBAAiB;EACjB,kBAAkB;AE4BtB;;AFxFA;EI0EE,kBAAkB;EAClB,WJX0B;EIY1B,YJZ0B;EIa1B,eAAe;EJZb,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,kBAAkB;AE+BtB;;AFnGA;EIiFI,sBAA0C;EAC1C,WAAW;EACX,kBAAkB;EAClB,QAA+B;EAC/B,WJrB8B;EIsB9B,WJtBmC;EIuBnC,yBHrKiB;AC2LrB;;AF7GA;EI2FI,gCAAwB;EAAxB,4BAAwB;EAAxB,wBAAwB;AFsB5B;;AFjHA;EI+FI,iCAAyB;EAAzB,6BAAyB;EAAzB,yBAAyB;AFsB7B;;AFrHA;EAwEM,6ECtL4C;EDsL5C,wECtL4C;EDsL5C,qECtL4C;ACuOlD;;AFzHA;EA8EQ,yBC1JiB;ACyMzB;;AF7HA;;EDtFE,8CAA8C;EAC9C,gBAAgB;EC2Kd,cCpKiB;ACkNrB;;AFpIA;EIpBI,eAA0B;EAWxB,iBAAkC;EAKpC,gBJ8FqB;EACrB,kBAAkB;AEgDtB;;AF3IA;EA+FI,kEC7M8C;ED6M9C,6DC7M8C;ED6M9C,0DC7M8C;EG0F9C,eAA0B;EAWxB,iBAAkC;EA8GtC,kBAAkB;EAClB,qBAAqB;AF6CvB;;AFnJA;EIyGI,WAAW;EACX,kBAAkB;EAClB,YJV0B;EIW1B,OAAO;EACP,WAAW;EACX,aAA0B;EAC1B,8BAA8B;AF8ClC;;AF7JA;EAoGM,cChLmB;AC6OzB;;AFxDA;EACE;;IAEE,0CAAkC;IAAlC,kCAAkC;EE2DpC;EFxDA;;IAEE,yCAAiC;IAAjC,iCAAiC;EE0DnC;EFvDA;;;IAGE,0CAAkC;IAAlC,kCAAkC;EEyDpC;EFtDA;;IAEE,yCAAiC;IAAjC,iCAAiC;EEwDnC;AACF;;AF5EA;EACE;;IAEE,0CAAkC;IAAlC,kCAAkC;EE2DpC;EFxDA;;IAEE,yCAAiC;IAAjC,iCAAiC;EE0DnC;EFvDA;;;IAGE,0CAAkC;IAAlC,kCAAkC;EEyDpC;EFtDA;;IAEE,yCAAiC;IAAjC,iCAAiC;EEwDnC;AACF","file":"points-notifier.css","sourcesContent":["// =====================================================================\n// Fonts\n// =====================================================================\n\n// @font-face {\n// \tfont-family: 'HoratioLT-Light';\n// \tsrc: url('./fonts/HoratioLT-Light.eot?') format('eot'),\n// \t     url('./fonts/HoratioLT-Light.woff') format('woff'),\n// \t     url('./fonts/HoratioLT-Light.ttf')  format('truetype'),\n// \t     url('./fonts/HoratioLT-Light.svg#HoratioLT-Light') format('svg')\n// }\n\n@import url('https://fonts.googleapis.com/css?family=Noto+Sans+SC:100,300,400,500,700');\n\n@mixin font-notsanssc-thin {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 100;\n}\n\n@mixin font-notsanssc-light {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 300;\n}\n\n@mixin font-notosanssc-regular {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 400;\n}\n\n@mixin font-notosanssc-medium {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 500;\n}\n\n@mixin font-notosanssc-bold {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 700;\n}\n\n@mixin font-notosanssc-black {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 900;\n}\n","// =====================================================================\n// Point-notifier\n// =====================================================================\n\n@import 'variables';\n@import 'mixins';\n@import 'fonts';\n@import 'bootstrap/scss/functions';\n@import 'bootstrap/scss/variables';\n@import 'bootstrap/scss/mixins/breakpoints';\n\n.point-notifier {\n  transition: transform 0.4s $easeOutCubic, background-color 0.4s $easeOutCubic;\n  position: fixed;\n  left: 15px;\n  bottom: 15px;\n  width: 100px;\n  height: 100px;\n  background-color: $color-brand;\n  border-radius: 50%;\n  text-align: center;\n  box-shadow: 0 0 5px rgba($color-black, 0.4);\n  cursor: pointer;\n\n  display: none;\n  @include media-breakpoint-up(lg) {\n    display: block;\n  }\n\n  &:hover {\n    background-color: darken($color-brand, 5%);\n  }\n\n  &.is-minimized {\n    transition: transform 0.4s $easeOutCubic, background-color 0.4s $easeOutCubic;\n    transform: scale(0.4);\n\n    .point-notifier-expand {\n      display: block;\n    }\n\n    .point-notifier-content {\n      opacity: 0;\n      visibility: hidden;\n    }\n  }\n\n  &.is-hidden {\n    transition: transform 0.4s $easeInBack;\n    transform: scale(0);\n  }\n\n  &.headshake {\n    animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .point-notifier-expand {\n    line-height: 90px;\n    display: none;\n\n    .svg-icon-expand {\n      width: 50px;\n      height: auto;\n    }\n  }\n\n  .point-notifier-content {\n    transition: opacity 0.4s $easeOutCubic, visibility 0.4s $easeOutCubic;\n    max-width: 80px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .point-notifier-cancel {\n    @include btn-cancel(14px, 100%, 2px, $color-white);\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 8px;\n    margin-bottom: 8px;\n\n    &::before,\n    &::after {\n      transition: background-color 0.3s $easeOutCubic;\n    }\n\n    &:hover {\n      &::before,\n      &::after {\n        background-color: $color-whitepale;\n      }\n    }\n  }\n\n  p,\n  a {\n    @include font-notosanssc-medium;\n    color: $color-white;\n  }\n\n  p {\n    @include font(14, 1.2);\n    margin-bottom: 5px;\n  }\n\n  a {\n    transition: color 0.3s $easeOutCubic;\n    @include font(11);\n    @include underline(1, -2px);\n\n    &:hover {\n      color: $color-whitepale;\n    }\n  }\n}\n\n.point-notifier-mobile {\n  transition: transform 0.4s $easeOutCubic, background-color 0.4s $easeOutCubic;\n  position: absolute;\n  right: 15px;\n  top: 70px;\n  width: 100px;\n  height: 100px;\n  background-color: $color-brand;\n  border-radius: 50%;\n  text-align: center;\n  box-shadow: 0 0 5px rgba($color-black, 0.4);\n  cursor: pointer;\n\n  display: none;\n  @include media-breakpoint-up(lg) {\n    display: none;\n  }\n\n  &:hover {\n    background-color: darken($color-brand, 5%);\n  }\n\n  &.is-minimized {\n    transition: transform 0.4s $easeOutCubic, background-color 0.4s $easeOutCubic;\n    transform: scale(0.4);\n\n    .point-notifier-expand {\n      display: block;\n    }\n\n    .point-notifier-content {\n      opacity: 0;\n      visibility: hidden;\n    }\n  }\n\n  &.is-hidden {\n    transition: transform 0.4s $easeInBack;\n    transform: scale(0);\n  }\n\n  &.headshake {\n    animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .point-notifier-expand {\n    line-height: 90px;\n    display: none;\n\n    .svg-icon-expand {\n      width: 50px;\n      height: auto;\n    }\n  }\n\n  .point-notifier-content {\n    transition: opacity 0.4s $easeOutCubic, visibility 0.4s $easeOutCubic;\n    max-width: 80px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .point-notifier-cancel {\n    @include btn-cancel(14px, 100%, 2px, $color-white);\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 8px;\n    margin-bottom: 8px;\n\n    &::before,\n    &::after {\n      transition: background-color 0.3s $easeOutCubic;\n    }\n\n    &:hover {\n      &::before,\n      &::after {\n        background-color: $color-whitepale;\n      }\n    }\n  }\n\n  p,\n  a {\n    @include font-notosanssc-medium;\n    color: $color-white;\n  }\n\n  p {\n    @include font(14, 1.2);\n    margin-bottom: 5px;\n  }\n\n  a {\n    transition: color 0.3s $easeOutCubic;\n    @include font(11);\n    @include underline(1, -2px);\n\n    &:hover {\n      color: $color-whitepale;\n    }\n  }\n}\n\n@keyframes shake {\n  10%,\n  90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n\n  20%,\n  80% {\n    transform: translate3d(1px, 0, 0);\n  }\n\n  30%,\n  50%,\n  70% {\n    transform: translate3d(-2px, 0, 0);\n  }\n\n  40%,\n  60% {\n    transform: translate3d(2px, 0, 0);\n  }\n}\n","// =====================================================================\n// Variables\n// =====================================================================\n\n// Animation\n$easeInCubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$easeOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$easeInOutCubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n\n$easeInCirc: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$easeOutCirc: cubic-bezier(0.075, 0.82, 0.165, 1);\n$easeInOutCirc: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n\n$easeInExpo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$easeOutExpo: cubic-bezier(0.19, 1, 0.22, 1);\n$easeInOutExpo: cubic-bezier(1, 0, 0, 1);\n\n$easeInQuad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$easeOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$easeInOutQuad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n\n$easeInQuart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$easeOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$easeInOutQuart: cubic-bezier(0.77, 0, 0.175, 1);\n\n$easeInQuint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$easeOutQuint: cubic-bezier(0.23, 1, 0.32, 1);\n$easeInOutQuint: cubic-bezier(0.86, 0, 0.07, 1);\n\n$easeInSine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$easeOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$easeInOutSine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n\n$easeInBack: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n$easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n$easeInOutBack: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n\n// Colours\n$color-white: #ffffff;\n$color-whitepale-light: #f4f5f7;\n$color-whitepale: #eaeaea;\n$color-grey-lighter: #cccccc;\n$color-grey-light: #9e9e9e;\n$color-grey: #464646;\n$color-grey-50: #f9f9f9;\n$color-grey-200: #e0e0e0;\n$color-grey-400: #696969;\n$color-grey-900: #1e1e1e;\n$color-black: #000000;\n$color-brand: #a80034;\n$color-brand-light: #cf1818;\n$color-brand-darkmode: #ff1339;\n$color-pink: #ff8bc6;\n$color-pink-light: #ffdbed;\n$color-yellow: #fad307;\n$color-blue-light: #6bd0f3;\n$color-blue: #3951d4;\n$color-u-weekly: #00a5c0;\n$ads-color: #fff8f8;\n$yellow-500: #b78b2f;\n$color-blue-100: #eff5fc;\n$color-blue-900: #003866;\n$color-red-shinmin: #ff1339;\n$color-blue-wanbao: #0098de;\n$color-body: $color-grey;\n$content-inactive-inverse: $color-grey-400;\n$primary-background-inverse: $color-grey-900;\n$background-tertiary: $color-grey-50;\n$content-primary-inverse: $color-grey-200;\n$content-quaternary: $color-blue-900;\n$color-crimson-500: #cc0f2e;\n$border-color: $color-whitepale;\n$background-success: $color-blue-100;\n// Fonts\n$font-root-size: percentage(10 / 16); // 16 is default browser font-size\n$font-base-size: 18;\n\n$font-ls-medium: 4px; // cta\n$font-ls-regular: 2px; // article title\n$font-ls-small: 0.5px; // body\n\n// General\n$br-large: 24px;\n$br-regular: 8px;\n$ham-w: 20px;\n$ham-h: 20px;\n$icon-unlock-maxw: 60px;\n$cta-h: 30px;\n$cta-h-tall: 40px;\n\n// Specifics\n$maxw-xl: 1670px; // 1680px\n$mobile-aside-handle-h: 55px;\n$topnavbar-header-h: 45px;\n$topnavbar-mobile-allowance-mb: 50px;\n","@import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+SC:100,300,400,500,700\");\n.point-notifier {\n  transition: transform 0.4s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\n  position: fixed;\n  left: 15px;\n  bottom: 15px;\n  width: 100px;\n  height: 100px;\n  background-color: #a80034;\n  border-radius: 50%;\n  text-align: center;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);\n  cursor: pointer;\n  display: none;\n}\n\n@media (min-width: 992px) {\n  .point-notifier {\n    display: block;\n  }\n}\n\n.point-notifier:hover {\n  background-color: #8f002c;\n}\n\n.point-notifier.is-minimized {\n  transition: transform 0.4s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\n  transform: scale(0.4);\n}\n\n.point-notifier.is-minimized .point-notifier-expand {\n  display: block;\n}\n\n.point-notifier.is-minimized .point-notifier-content {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.point-notifier.is-hidden {\n  transition: transform 0.4s cubic-bezier(0.6, -0.28, 0.735, 0.045);\n  transform: scale(0);\n}\n\n.point-notifier.headshake {\n  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n  transform: translate3d(0, 0, 0);\n}\n\n.point-notifier .point-notifier-expand {\n  line-height: 90px;\n  display: none;\n}\n\n.point-notifier .point-notifier-expand .svg-icon-expand {\n  width: 50px;\n  height: auto;\n}\n\n.point-notifier .point-notifier-content {\n  transition: opacity 0.4s cubic-bezier(0.215, 0.61, 0.355, 1), visibility 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\n  max-width: 80px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.point-notifier .point-notifier-cancel {\n  position: relative;\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n.point-notifier .point-notifier-cancel::before, .point-notifier .point-notifier-cancel::after {\n  top: calc(50% - (1px));\n  content: '';\n  position: absolute;\n  left: 0%;\n  width: 100%;\n  height: 2px;\n  background-color: #ffffff;\n}\n\n.point-notifier .point-notifier-cancel::before {\n  transform: rotate(45deg);\n}\n\n.point-notifier .point-notifier-cancel::after {\n  transform: rotate(-45deg);\n}\n\n.point-notifier .point-notifier-cancel::before, .point-notifier .point-notifier-cancel::after {\n  transition: background-color 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);\n}\n\n.point-notifier .point-notifier-cancel:hover::before, .point-notifier .point-notifier-cancel:hover::after {\n  background-color: #eaeaea;\n}\n\n.point-notifier p,\n.point-notifier a {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 500;\n  color: #ffffff;\n}\n\n.point-notifier p {\n  font-size: 14px;\n  font-size: 1.4rem;\n  line-height: 1.2;\n  margin-bottom: 5px;\n}\n\n.point-notifier a {\n  transition: color 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);\n  font-size: 11px;\n  font-size: 1.1rem;\n  position: relative;\n  text-decoration: none;\n}\n\n.point-notifier a::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 100%;\n  height: 0.1em;\n  background-color: currentColor;\n}\n\n.point-notifier a:hover {\n  color: #eaeaea;\n}\n\n.point-notifier-mobile {\n  transition: transform 0.4s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\n  position: absolute;\n  right: 15px;\n  top: 70px;\n  width: 100px;\n  height: 100px;\n  background-color: #a80034;\n  border-radius: 50%;\n  text-align: center;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);\n  cursor: pointer;\n  display: none;\n}\n\n@media (min-width: 992px) {\n  .point-notifier-mobile {\n    display: none;\n  }\n}\n\n.point-notifier-mobile:hover {\n  background-color: #8f002c;\n}\n\n.point-notifier-mobile.is-minimized {\n  transition: transform 0.4s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\n  transform: scale(0.4);\n}\n\n.point-notifier-mobile.is-minimized .point-notifier-expand {\n  display: block;\n}\n\n.point-notifier-mobile.is-minimized .point-notifier-content {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.point-notifier-mobile.is-hidden {\n  transition: transform 0.4s cubic-bezier(0.6, -0.28, 0.735, 0.045);\n  transform: scale(0);\n}\n\n.point-notifier-mobile.headshake {\n  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n  transform: translate3d(0, 0, 0);\n}\n\n.point-notifier-mobile .point-notifier-expand {\n  line-height: 90px;\n  display: none;\n}\n\n.point-notifier-mobile .point-notifier-expand .svg-icon-expand {\n  width: 50px;\n  height: auto;\n}\n\n.point-notifier-mobile .point-notifier-content {\n  transition: opacity 0.4s cubic-bezier(0.215, 0.61, 0.355, 1), visibility 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\n  max-width: 80px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.point-notifier-mobile .point-notifier-cancel {\n  position: relative;\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n.point-notifier-mobile .point-notifier-cancel::before, .point-notifier-mobile .point-notifier-cancel::after {\n  top: calc(50% - (1px));\n  content: '';\n  position: absolute;\n  left: 0%;\n  width: 100%;\n  height: 2px;\n  background-color: #ffffff;\n}\n\n.point-notifier-mobile .point-notifier-cancel::before {\n  transform: rotate(45deg);\n}\n\n.point-notifier-mobile .point-notifier-cancel::after {\n  transform: rotate(-45deg);\n}\n\n.point-notifier-mobile .point-notifier-cancel::before, .point-notifier-mobile .point-notifier-cancel::after {\n  transition: background-color 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);\n}\n\n.point-notifier-mobile .point-notifier-cancel:hover::before, .point-notifier-mobile .point-notifier-cancel:hover::after {\n  background-color: #eaeaea;\n}\n\n.point-notifier-mobile p,\n.point-notifier-mobile a {\n  font-family: 'Noto Sans SC', Arial, sans-serif;\n  font-weight: 500;\n  color: #ffffff;\n}\n\n.point-notifier-mobile p {\n  font-size: 14px;\n  font-size: 1.4rem;\n  line-height: 1.2;\n  margin-bottom: 5px;\n}\n\n.point-notifier-mobile a {\n  transition: color 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);\n  font-size: 11px;\n  font-size: 1.1rem;\n  position: relative;\n  text-decoration: none;\n}\n\n.point-notifier-mobile a::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 100%;\n  height: 0.1em;\n  background-color: currentColor;\n}\n\n.point-notifier-mobile a:hover {\n  color: #eaeaea;\n}\n\n@keyframes shake {\n  10%,\n  90% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  20%,\n  80% {\n    transform: translate3d(1px, 0, 0);\n  }\n  30%,\n  50%,\n  70% {\n    transform: translate3d(-2px, 0, 0);\n  }\n  40%,\n  60% {\n    transform: translate3d(2px, 0, 0);\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// ========================================================================\n// MIXINS\n// ========================================================================\n\n@mixin truncate {\n  display: block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n@mixin lineclamp($linenumber) {\n  display: -webkit-box;\n  -webkit-line-clamp: $linenumber;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n@mixin clearfix {\n  &::after {\n    content: '';\n    clear: both;\n    display: table;\n  }\n}\n\n@mixin bordered-gradient($from, $to, $bg) {\n  &::before {\n    background: linear-gradient(to right, $from, $to);\n  }\n\n  &::after {\n    background-color: $bg;\n  }\n}\n\n@mixin reset-button {\n  background: none;\n  border: 0;\n  padding: 0;\n  margin: 0;\n  outline: none;\n  cursor: pointer;\n}\n\n@mixin reset-input {\n  margin: 0;\n  border: 0;\n  padding: 0;\n  display: inline-block;\n  vertical-align: middle;\n  white-space: normal;\n  background: none;\n  line-height: 1;\n}\n\n@mixin reset-list {\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style-type: none;\n}\n\n@mixin revert-list {\n  display: block;\n  list-style-type: disc;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  margin-left: 0;\n  margin-right: 0;\n  padding-left: 40px;\n\n  > li {\n    display: list-item;\n  }\n}\n\n// https://maximilianhoffmann.com/posts/better-font-rendering-on-osx\n@mixin font-smoothing($value: on) {\n  @if $value == on {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  @else {\n    -webkit-font-smoothing: subpixel-antialiased;\n    -moz-osx-font-smoothing: auto;\n  }\n}\n\n// @include font(21, 24, 20)\n@mixin font($sizeValue: 16, $lineHeight: null, $letterSpacing: null, $isEm: false) {\n  @if type-of($sizeValue) == 'string' {\n    font-size: $sizeValue;\n  }\n\n  @else {\n    font-size: $sizeValue + px;\n\n    @if ($isEm) {\n      font-size: em($sizeValue);\n\n      // p {\n      //   font-size: em(10); // unset compounding\n      // }\n    }\n\n    @else {\n      font-size: ($sizeValue / 10) + rem;\n    }\n  }\n\n  @if type-of($lineHeight) != null {\n    line-height: $lineHeight;\n  }\n\n  @if type-of($letterSpacing) != null {\n    letter-spacing: $letterSpacing;\n  }\n}\n\n@mixin hamburger($width, $height, $thickness, $linecolor) {\n  position: relative;\n  width: $width;\n  height: $height;\n\n  > div {\n    position: absolute;\n    left: unset;\n    background-color: $linecolor;\n    width: 100%;\n    height: $thickness;\n    margin: 0 2px;\n\n    &:nth-child(1) {\n      top: 3px;\n    }\n\n    &:nth-child(2) {\n      top: 50%;\n      margin-top: -($thickness / 2);\n    }\n\n    &:nth-child(3) {\n      bottom: 3px;\n    }\n  }\n}\n\n// @include aspect-ratio(16, 9);\n@mixin aspect-ratio($width, $height) {\n  width: 100%;\n\n  &::before {\n    content: '';\n    width: 1px;\n    margin-left: -1px;\n    float: left;\n    height: 0;\n    padding-top: ($height / $width) * 100%;\n  }\n\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n\n// @include loading($w: 10px, $border-w: 2px, $spd: 1.3s, $primary: red, $secondary: green);\n@mixin loading($w: 24px, $border-w: 4px, $spd: 0.9s, $primary: darken(#ffffff, 45%), $secondary: darken(#ffffff, 25%)) {\n  width: $w;\n  height: $w;\n  margin-top: -($w / 2);\n  margin-left: -($w / 2);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 0;\n  border-radius: 50%;\n  border-style: solid;\n  border-width: $border-w;\n  border-top-color: $primary;\n  border-left-color: $secondary;\n  border-bottom-color: $secondary;\n  border-right-color: $secondary;\n  animation: spinning $spd linear infinite;\n}\n\n// @include btn-cancel(20px, 100%, 1px, transparentize($color-black, 0.5));\n@mixin btn-cancel($length, $cross-length, $cross-thickness, $cross-color) {\n  position: relative;\n  width: $length;\n  height: $length;\n  cursor: pointer;\n\n  &::before,\n  &::after {\n    top: calc(50% - (#{$cross-thickness / 2}));\n    content: '';\n    position: absolute;\n    left: (100 - $cross-length) / 2;\n    width: $cross-length;\n    height: $cross-thickness;\n    background-color: $cross-color;\n  }\n\n  &::before {\n    transform: rotate(45deg);\n  }\n\n  &::after {\n    transform: rotate(-45deg);\n  }\n}\n\n// @include underline(0.5, -2px);\n@mixin underline($thickness, $offset) {\n  position: relative;\n  text-decoration: none;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: $offset;\n    left: 0;\n    width: 100%;\n    height: 0.1em * $thickness;\n    background-color: currentColor;\n  }\n}\n\n// @include underline-border(0.5, -2px);\n@mixin underline-border($thickness, $offset) {\n  position: relative;\n  text-decoration: none;\n  padding-bottom: ($offset + em);\n  border-bottom: ($thickness + px) solid currentColor;\n\n  &:hover,\n  &:focus,\n  &:visited {\n    text-decoration: none;\n  }\n}\n"]}